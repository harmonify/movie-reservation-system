services:
    kafka:
        image: apache/kafka:latest
        ports:
            - "9092:9092"
        environment:
            KAFKA_NODE_ID: 1
            KAFKA_PROCESS_ROLES: broker,controller
            KAFKA_LISTENERS: INTERNAL://:290092,PLAINTEXT://0.0.0.0:9092,CONTROLLER://localhost:9093
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,PLAINTEXT://localhost:9092
            KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
            KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            KAFKA_NUM_PARTITIONS: 3
            KAFKA_LOG_DIRS: /data
            KAFKA_RESTART_ATTEMPTS: "10"
            KAFKA_RESTART_DELAY: "5"
        volumes:
            - ./.data/kafka:/data
        networks:
            - core-net
        logging:
            driver: loki
            options:
                loki-url: "http://loki:3100/api/prom/push"

    kafka-exporter:
        image: danielqsj/kafka-exporter:latest
        environment:
            KAFKA_BROKERS: "kafka:9092"
        ports:
            - "9308:9308"
        depends_on:
            - kafka
        networks:
            - core-net
            - monitoring-net
        logging:
            driver: loki
            options:
                loki-url: "http://loki:3100/api/prom/push"

    kafdrop:
        image: obsidiandynamics/kafdrop
        restart: "no"
        ports:
            - "9000:9000"
        environment:
            KAFKA_BROKERCONNECT: "kafka:29092"
        depends_on:
            - "kafka"
