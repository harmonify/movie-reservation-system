apiVersion: 1
datasources:
    - name: Loki
      type: loki
      uid: loki
      url: http://loki:3100
      access: proxy
      basicAuth: false
      jsonData:
          httpHeaderName1: "X-Scope-OrgID"
          timeout: 60
          maxLines: 1000
          derivedFields:
              # Field with internal link pointing to data source in Grafana.
              # datasourceUid value can be anything, but it should be unique across all defined data source uids.
              - datasourceUid: my_jaeger_uid
                matcherRegex: "trace_id=(\\w+)"
                name: TraceID
                # url will be interpreted as query for the datasource
                url: "$${__value.raw}"
                # optional for URL Label to set a custom display label for the link.
                urlDisplayLabel: "View Trace"

              # Field with external link.
              - matcherRegex: "trace_id=(\\w+)"
                name: TraceID
                url: "http://jaeger-query:16688/trace/$${__value.raw}"
      secureJsonData:
          httpHeaderValue1: "docker"
      editable: true
      version: 1
      isDefault: true

    - name: Jaeger
      type: jaeger
      uid: jaeger
      url: http://jaeger-query:16688
      access: proxy
      basicAuth: false
      editable: true
      version: 1
      jsonData:
          tracesToLogsV2:
              # Field with an internal link pointing to a logs data source in Grafana.
              # datasourceUid value must match the uid value of the logs data source.
              datasourceUid: "loki"
              spanStartTimeShift: "1h"
              spanEndTimeShift: "-1h"
              tags: ["job", "instance", "pod", "namespace"]
              filterByTraceID: false
              filterBySpanID: false
              customQuery: true
              query: 'method="$${__span.tags.method}"'
          tracesToMetrics:
              datasourceUid: "prom"
              spanStartTimeShift: "1h"
              spanEndTimeShift: "-1h"
              tags: [{ key: "service.name", value: "service" }, { key: "job" }]
              queries:
                  - name: "Sample query"
                    query: "sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))"
          nodeGraph:
              enabled: true
          traceQuery:
              timeShiftEnabled: true
              spanStartTimeShift: "1h"
              spanEndTimeShift: "-1h"
          spanBar:
              type: "None"

    - name: Prometheus
      type: prometheus
      uid: prometheus
      url: http://prometheus:9090
      access: proxy
      basicAuth: false
      editable: true
      version: 1
      jsonData:
          httpMethod: POST
          manageAlerts: true
          prometheusType: Prometheus
          prometheusVersion: 2.44.0
          cacheLevel: "High"
          disableRecordingRules: false
          incrementalQueryOverlapWindow: 10m
          exemplarTraceIdDestinations:
              # Field with internal link pointing to data source in Grafana.
              # datasourceUid value can be anything, but it should be unique across all defined data source uids.
              - datasourceUid: my_jaeger_uid
                name: trace_id

              # Field with external link.
              - name: trace_id
                url: "http://localhost:3000/explore?orgId=1&left=%5B%22now-1h%22,%22now%22,%22Jaeger%22,%7B%22query%22:%22$${__value.raw}%22%7D%5D"
