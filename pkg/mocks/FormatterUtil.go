// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// FormatterUtil is an autogenerated mock type for the FormatterUtil type
type FormatterUtil struct {
	mock.Mock
}

type FormatterUtil_Expecter struct {
	mock *mock.Mock
}

func (_m *FormatterUtil) EXPECT() *FormatterUtil_Expecter {
	return &FormatterUtil_Expecter{mock: &_m.Mock}
}

// FormatPhoneNumberToE164 provides a mock function with given fields: phoneNumber, countryCode
func (_m *FormatterUtil) FormatPhoneNumberToE164(phoneNumber string, countryCode string) string {
	ret := _m.Called(phoneNumber, countryCode)

	if len(ret) == 0 {
		panic("no return value specified for FormatPhoneNumberToE164")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(phoneNumber, countryCode)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// FormatterUtil_FormatPhoneNumberToE164_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FormatPhoneNumberToE164'
type FormatterUtil_FormatPhoneNumberToE164_Call struct {
	*mock.Call
}

// FormatPhoneNumberToE164 is a helper method to define mock.On call
//   - phoneNumber string
//   - countryCode string
func (_e *FormatterUtil_Expecter) FormatPhoneNumberToE164(phoneNumber interface{}, countryCode interface{}) *FormatterUtil_FormatPhoneNumberToE164_Call {
	return &FormatterUtil_FormatPhoneNumberToE164_Call{Call: _e.mock.On("FormatPhoneNumberToE164", phoneNumber, countryCode)}
}

func (_c *FormatterUtil_FormatPhoneNumberToE164_Call) Run(run func(phoneNumber string, countryCode string)) *FormatterUtil_FormatPhoneNumberToE164_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *FormatterUtil_FormatPhoneNumberToE164_Call) Return(_a0 string) *FormatterUtil_FormatPhoneNumberToE164_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FormatterUtil_FormatPhoneNumberToE164_Call) RunAndReturn(run func(string, string) string) *FormatterUtil_FormatPhoneNumberToE164_Call {
	_c.Call.Return(run)
	return _c
}

// NewFormatterUtil creates a new instance of FormatterUtil. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFormatterUtil(t interface {
	mock.TestingT
	Cleanup(func())
}) *FormatterUtil {
	mock := &FormatterUtil{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
