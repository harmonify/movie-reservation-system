// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// JwtRbacHttpMiddleware is an autogenerated mock type for the JwtRbacHttpMiddleware type
type JwtRbacHttpMiddleware struct {
	mock.Mock
}

type JwtRbacHttpMiddleware_Expecter struct {
	mock *mock.Mock
}

func (_m *JwtRbacHttpMiddleware) EXPECT() *JwtRbacHttpMiddleware_Expecter {
	return &JwtRbacHttpMiddleware_Expecter{mock: &_m.Mock}
}

// CheckPermission provides a mock function with given fields: _a0
func (_m *JwtRbacHttpMiddleware) CheckPermission(_a0 *gin.Context) {
	_m.Called(_a0)
}

// JwtRbacHttpMiddleware_CheckPermission_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CheckPermission'
type JwtRbacHttpMiddleware_CheckPermission_Call struct {
	*mock.Call
}

// CheckPermission is a helper method to define mock.On call
//   - _a0 *gin.Context
func (_e *JwtRbacHttpMiddleware_Expecter) CheckPermission(_a0 interface{}) *JwtRbacHttpMiddleware_CheckPermission_Call {
	return &JwtRbacHttpMiddleware_CheckPermission_Call{Call: _e.mock.On("CheckPermission", _a0)}
}

func (_c *JwtRbacHttpMiddleware_CheckPermission_Call) Run(run func(_a0 *gin.Context)) *JwtRbacHttpMiddleware_CheckPermission_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *JwtRbacHttpMiddleware_CheckPermission_Call) Return() *JwtRbacHttpMiddleware_CheckPermission_Call {
	_c.Call.Return()
	return _c
}

func (_c *JwtRbacHttpMiddleware_CheckPermission_Call) RunAndReturn(run func(*gin.Context)) *JwtRbacHttpMiddleware_CheckPermission_Call {
	_c.Call.Return(run)
	return _c
}

// NewJwtRbacHttpMiddleware creates a new instance of JwtRbacHttpMiddleware. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJwtRbacHttpMiddleware(t interface {
	mock.TestingT
	Cleanup(func())
}) *JwtRbacHttpMiddleware {
	mock := &JwtRbacHttpMiddleware{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
