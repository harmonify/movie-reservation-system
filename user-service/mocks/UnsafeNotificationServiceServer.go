// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// UnsafeNotificationServiceServer is an autogenerated mock type for the UnsafeNotificationServiceServer type
type UnsafeNotificationServiceServer struct {
	mock.Mock
}

type UnsafeNotificationServiceServer_Expecter struct {
	mock *mock.Mock
}

func (_m *UnsafeNotificationServiceServer) EXPECT() *UnsafeNotificationServiceServer_Expecter {
	return &UnsafeNotificationServiceServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedNotificationServiceServer provides a mock function with given fields:
func (_m *UnsafeNotificationServiceServer) mustEmbedUnimplementedNotificationServiceServer() {
	_m.Called()
}

// UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedNotificationServiceServer'
type UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedNotificationServiceServer is a helper method to define mock.On call
func (_e *UnsafeNotificationServiceServer_Expecter) mustEmbedUnimplementedNotificationServiceServer() *UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call {
	return &UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call{Call: _e.mock.On("mustEmbedUnimplementedNotificationServiceServer")}
}

func (_c *UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call) Run(run func()) *UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call) Return() *UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call) RunAndReturn(run func()) *UnsafeNotificationServiceServer_mustEmbedUnimplementedNotificationServiceServer_Call {
	_c.Call.Return(run)
	return _c
}

// NewUnsafeNotificationServiceServer creates a new instance of UnsafeNotificationServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUnsafeNotificationServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *UnsafeNotificationServiceServer {
	mock := &UnsafeNotificationServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
