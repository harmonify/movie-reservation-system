// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"

	shared "github.com/harmonify/movie-reservation-system/user-service/internal/core/shared"
	mock "github.com/stretchr/testify/mock"
)

// OtpCache is an autogenerated mock type for the OtpCache type
type OtpCache struct {
	mock.Mock
}

type OtpCache_Expecter struct {
	mock *mock.Mock
}

func (_m *OtpCache) EXPECT() *OtpCache_Expecter {
	return &OtpCache_Expecter{mock: &_m.Mock}
}

// DeleteEmailVerificationCode provides a mock function with given fields: ctx, uuid
func (_m *OtpCache) DeleteEmailVerificationCode(ctx context.Context, uuid string) (bool, error) {
	ret := _m.Called(ctx, uuid)

	if len(ret) == 0 {
		panic("no return value specified for DeleteEmailVerificationCode")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (bool, error)); ok {
		return rf(ctx, uuid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, uuid)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OtpCache_DeleteEmailVerificationCode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteEmailVerificationCode'
type OtpCache_DeleteEmailVerificationCode_Call struct {
	*mock.Call
}

// DeleteEmailVerificationCode is a helper method to define mock.On call
//   - ctx context.Context
//   - uuid string
func (_e *OtpCache_Expecter) DeleteEmailVerificationCode(ctx interface{}, uuid interface{}) *OtpCache_DeleteEmailVerificationCode_Call {
	return &OtpCache_DeleteEmailVerificationCode_Call{Call: _e.mock.On("DeleteEmailVerificationCode", ctx, uuid)}
}

func (_c *OtpCache_DeleteEmailVerificationCode_Call) Run(run func(ctx context.Context, uuid string)) *OtpCache_DeleteEmailVerificationCode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *OtpCache_DeleteEmailVerificationCode_Call) Return(_a0 bool, _a1 error) *OtpCache_DeleteEmailVerificationCode_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *OtpCache_DeleteEmailVerificationCode_Call) RunAndReturn(run func(context.Context, string) (bool, error)) *OtpCache_DeleteEmailVerificationCode_Call {
	_c.Call.Return(run)
	return _c
}

// DeletePhoneNumberVerificationAttempt provides a mock function with given fields: ctx, uuid
func (_m *OtpCache) DeletePhoneNumberVerificationAttempt(ctx context.Context, uuid string) (bool, error) {
	ret := _m.Called(ctx, uuid)

	if len(ret) == 0 {
		panic("no return value specified for DeletePhoneNumberVerificationAttempt")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (bool, error)); ok {
		return rf(ctx, uuid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, uuid)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OtpCache_DeletePhoneNumberVerificationAttempt_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeletePhoneNumberVerificationAttempt'
type OtpCache_DeletePhoneNumberVerificationAttempt_Call struct {
	*mock.Call
}

// DeletePhoneNumberVerificationAttempt is a helper method to define mock.On call
//   - ctx context.Context
//   - uuid string
func (_e *OtpCache_Expecter) DeletePhoneNumberVerificationAttempt(ctx interface{}, uuid interface{}) *OtpCache_DeletePhoneNumberVerificationAttempt_Call {
	return &OtpCache_DeletePhoneNumberVerificationAttempt_Call{Call: _e.mock.On("DeletePhoneNumberVerificationAttempt", ctx, uuid)}
}

func (_c *OtpCache_DeletePhoneNumberVerificationAttempt_Call) Run(run func(ctx context.Context, uuid string)) *OtpCache_DeletePhoneNumberVerificationAttempt_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *OtpCache_DeletePhoneNumberVerificationAttempt_Call) Return(_a0 bool, _a1 error) *OtpCache_DeletePhoneNumberVerificationAttempt_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *OtpCache_DeletePhoneNumberVerificationAttempt_Call) RunAndReturn(run func(context.Context, string) (bool, error)) *OtpCache_DeletePhoneNumberVerificationAttempt_Call {
	_c.Call.Return(run)
	return _c
}

// DeletePhoneNumberVerificationOtp provides a mock function with given fields: ctx, uuid
func (_m *OtpCache) DeletePhoneNumberVerificationOtp(ctx context.Context, uuid string) (bool, error) {
	ret := _m.Called(ctx, uuid)

	if len(ret) == 0 {
		panic("no return value specified for DeletePhoneNumberVerificationOtp")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (bool, error)); ok {
		return rf(ctx, uuid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, uuid)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OtpCache_DeletePhoneNumberVerificationOtp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeletePhoneNumberVerificationOtp'
type OtpCache_DeletePhoneNumberVerificationOtp_Call struct {
	*mock.Call
}

// DeletePhoneNumberVerificationOtp is a helper method to define mock.On call
//   - ctx context.Context
//   - uuid string
func (_e *OtpCache_Expecter) DeletePhoneNumberVerificationOtp(ctx interface{}, uuid interface{}) *OtpCache_DeletePhoneNumberVerificationOtp_Call {
	return &OtpCache_DeletePhoneNumberVerificationOtp_Call{Call: _e.mock.On("DeletePhoneNumberVerificationOtp", ctx, uuid)}
}

func (_c *OtpCache_DeletePhoneNumberVerificationOtp_Call) Run(run func(ctx context.Context, uuid string)) *OtpCache_DeletePhoneNumberVerificationOtp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *OtpCache_DeletePhoneNumberVerificationOtp_Call) Return(_a0 bool, _a1 error) *OtpCache_DeletePhoneNumberVerificationOtp_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *OtpCache_DeletePhoneNumberVerificationOtp_Call) RunAndReturn(run func(context.Context, string) (bool, error)) *OtpCache_DeletePhoneNumberVerificationOtp_Call {
	_c.Call.Return(run)
	return _c
}

// GetEmailVerificationCode provides a mock function with given fields: ctx, uuid
func (_m *OtpCache) GetEmailVerificationCode(ctx context.Context, uuid string) (string, error) {
	ret := _m.Called(ctx, uuid)

	if len(ret) == 0 {
		panic("no return value specified for GetEmailVerificationCode")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, uuid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, uuid)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OtpCache_GetEmailVerificationCode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEmailVerificationCode'
type OtpCache_GetEmailVerificationCode_Call struct {
	*mock.Call
}

// GetEmailVerificationCode is a helper method to define mock.On call
//   - ctx context.Context
//   - uuid string
func (_e *OtpCache_Expecter) GetEmailVerificationCode(ctx interface{}, uuid interface{}) *OtpCache_GetEmailVerificationCode_Call {
	return &OtpCache_GetEmailVerificationCode_Call{Call: _e.mock.On("GetEmailVerificationCode", ctx, uuid)}
}

func (_c *OtpCache_GetEmailVerificationCode_Call) Run(run func(ctx context.Context, uuid string)) *OtpCache_GetEmailVerificationCode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *OtpCache_GetEmailVerificationCode_Call) Return(_a0 string, _a1 error) *OtpCache_GetEmailVerificationCode_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *OtpCache_GetEmailVerificationCode_Call) RunAndReturn(run func(context.Context, string) (string, error)) *OtpCache_GetEmailVerificationCode_Call {
	_c.Call.Return(run)
	return _c
}

// GetPhoneNumberVerificationAttempt provides a mock function with given fields: ctx, uuid
func (_m *OtpCache) GetPhoneNumberVerificationAttempt(ctx context.Context, uuid string) (int, error) {
	ret := _m.Called(ctx, uuid)

	if len(ret) == 0 {
		panic("no return value specified for GetPhoneNumberVerificationAttempt")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (int, error)); ok {
		return rf(ctx, uuid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) int); ok {
		r0 = rf(ctx, uuid)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OtpCache_GetPhoneNumberVerificationAttempt_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPhoneNumberVerificationAttempt'
type OtpCache_GetPhoneNumberVerificationAttempt_Call struct {
	*mock.Call
}

// GetPhoneNumberVerificationAttempt is a helper method to define mock.On call
//   - ctx context.Context
//   - uuid string
func (_e *OtpCache_Expecter) GetPhoneNumberVerificationAttempt(ctx interface{}, uuid interface{}) *OtpCache_GetPhoneNumberVerificationAttempt_Call {
	return &OtpCache_GetPhoneNumberVerificationAttempt_Call{Call: _e.mock.On("GetPhoneNumberVerificationAttempt", ctx, uuid)}
}

func (_c *OtpCache_GetPhoneNumberVerificationAttempt_Call) Run(run func(ctx context.Context, uuid string)) *OtpCache_GetPhoneNumberVerificationAttempt_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *OtpCache_GetPhoneNumberVerificationAttempt_Call) Return(_a0 int, _a1 error) *OtpCache_GetPhoneNumberVerificationAttempt_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *OtpCache_GetPhoneNumberVerificationAttempt_Call) RunAndReturn(run func(context.Context, string) (int, error)) *OtpCache_GetPhoneNumberVerificationAttempt_Call {
	_c.Call.Return(run)
	return _c
}

// GetPhoneNumberVerificationOtp provides a mock function with given fields: ctx, uuid
func (_m *OtpCache) GetPhoneNumberVerificationOtp(ctx context.Context, uuid string) (string, error) {
	ret := _m.Called(ctx, uuid)

	if len(ret) == 0 {
		panic("no return value specified for GetPhoneNumberVerificationOtp")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, uuid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, uuid)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, uuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// OtpCache_GetPhoneNumberVerificationOtp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPhoneNumberVerificationOtp'
type OtpCache_GetPhoneNumberVerificationOtp_Call struct {
	*mock.Call
}

// GetPhoneNumberVerificationOtp is a helper method to define mock.On call
//   - ctx context.Context
//   - uuid string
func (_e *OtpCache_Expecter) GetPhoneNumberVerificationOtp(ctx interface{}, uuid interface{}) *OtpCache_GetPhoneNumberVerificationOtp_Call {
	return &OtpCache_GetPhoneNumberVerificationOtp_Call{Call: _e.mock.On("GetPhoneNumberVerificationOtp", ctx, uuid)}
}

func (_c *OtpCache_GetPhoneNumberVerificationOtp_Call) Run(run func(ctx context.Context, uuid string)) *OtpCache_GetPhoneNumberVerificationOtp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *OtpCache_GetPhoneNumberVerificationOtp_Call) Return(_a0 string, _a1 error) *OtpCache_GetPhoneNumberVerificationOtp_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *OtpCache_GetPhoneNumberVerificationOtp_Call) RunAndReturn(run func(context.Context, string) (string, error)) *OtpCache_GetPhoneNumberVerificationOtp_Call {
	_c.Call.Return(run)
	return _c
}

// IncrementPhoneNumberVerificationAttempt provides a mock function with given fields: ctx, uuid
func (_m *OtpCache) IncrementPhoneNumberVerificationAttempt(ctx context.Context, uuid string) error {
	ret := _m.Called(ctx, uuid)

	if len(ret) == 0 {
		panic("no return value specified for IncrementPhoneNumberVerificationAttempt")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, uuid)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OtpCache_IncrementPhoneNumberVerificationAttempt_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IncrementPhoneNumberVerificationAttempt'
type OtpCache_IncrementPhoneNumberVerificationAttempt_Call struct {
	*mock.Call
}

// IncrementPhoneNumberVerificationAttempt is a helper method to define mock.On call
//   - ctx context.Context
//   - uuid string
func (_e *OtpCache_Expecter) IncrementPhoneNumberVerificationAttempt(ctx interface{}, uuid interface{}) *OtpCache_IncrementPhoneNumberVerificationAttempt_Call {
	return &OtpCache_IncrementPhoneNumberVerificationAttempt_Call{Call: _e.mock.On("IncrementPhoneNumberVerificationAttempt", ctx, uuid)}
}

func (_c *OtpCache_IncrementPhoneNumberVerificationAttempt_Call) Run(run func(ctx context.Context, uuid string)) *OtpCache_IncrementPhoneNumberVerificationAttempt_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *OtpCache_IncrementPhoneNumberVerificationAttempt_Call) Return(_a0 error) *OtpCache_IncrementPhoneNumberVerificationAttempt_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *OtpCache_IncrementPhoneNumberVerificationAttempt_Call) RunAndReturn(run func(context.Context, string) error) *OtpCache_IncrementPhoneNumberVerificationAttempt_Call {
	_c.Call.Return(run)
	return _c
}

// SaveEmailVerificationCode provides a mock function with given fields: ctx, p
func (_m *OtpCache) SaveEmailVerificationCode(ctx context.Context, p shared.SaveEmailVerificationCodeParam) error {
	ret := _m.Called(ctx, p)

	if len(ret) == 0 {
		panic("no return value specified for SaveEmailVerificationCode")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, shared.SaveEmailVerificationCodeParam) error); ok {
		r0 = rf(ctx, p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OtpCache_SaveEmailVerificationCode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveEmailVerificationCode'
type OtpCache_SaveEmailVerificationCode_Call struct {
	*mock.Call
}

// SaveEmailVerificationCode is a helper method to define mock.On call
//   - ctx context.Context
//   - p shared.SaveEmailVerificationCodeParam
func (_e *OtpCache_Expecter) SaveEmailVerificationCode(ctx interface{}, p interface{}) *OtpCache_SaveEmailVerificationCode_Call {
	return &OtpCache_SaveEmailVerificationCode_Call{Call: _e.mock.On("SaveEmailVerificationCode", ctx, p)}
}

func (_c *OtpCache_SaveEmailVerificationCode_Call) Run(run func(ctx context.Context, p shared.SaveEmailVerificationCodeParam)) *OtpCache_SaveEmailVerificationCode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(shared.SaveEmailVerificationCodeParam))
	})
	return _c
}

func (_c *OtpCache_SaveEmailVerificationCode_Call) Return(_a0 error) *OtpCache_SaveEmailVerificationCode_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *OtpCache_SaveEmailVerificationCode_Call) RunAndReturn(run func(context.Context, shared.SaveEmailVerificationCodeParam) error) *OtpCache_SaveEmailVerificationCode_Call {
	_c.Call.Return(run)
	return _c
}

// SavePhoneNumberVerificationOtp provides a mock function with given fields: ctx, p
func (_m *OtpCache) SavePhoneNumberVerificationOtp(ctx context.Context, p shared.SavePhoneNumberVerificationOtpParam) error {
	ret := _m.Called(ctx, p)

	if len(ret) == 0 {
		panic("no return value specified for SavePhoneNumberVerificationOtp")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, shared.SavePhoneNumberVerificationOtpParam) error); ok {
		r0 = rf(ctx, p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// OtpCache_SavePhoneNumberVerificationOtp_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SavePhoneNumberVerificationOtp'
type OtpCache_SavePhoneNumberVerificationOtp_Call struct {
	*mock.Call
}

// SavePhoneNumberVerificationOtp is a helper method to define mock.On call
//   - ctx context.Context
//   - p shared.SavePhoneNumberVerificationOtpParam
func (_e *OtpCache_Expecter) SavePhoneNumberVerificationOtp(ctx interface{}, p interface{}) *OtpCache_SavePhoneNumberVerificationOtp_Call {
	return &OtpCache_SavePhoneNumberVerificationOtp_Call{Call: _e.mock.On("SavePhoneNumberVerificationOtp", ctx, p)}
}

func (_c *OtpCache_SavePhoneNumberVerificationOtp_Call) Run(run func(ctx context.Context, p shared.SavePhoneNumberVerificationOtpParam)) *OtpCache_SavePhoneNumberVerificationOtp_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(shared.SavePhoneNumberVerificationOtpParam))
	})
	return _c
}

func (_c *OtpCache_SavePhoneNumberVerificationOtp_Call) Return(_a0 error) *OtpCache_SavePhoneNumberVerificationOtp_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *OtpCache_SavePhoneNumberVerificationOtp_Call) RunAndReturn(run func(context.Context, shared.SavePhoneNumberVerificationOtpParam) error) *OtpCache_SavePhoneNumberVerificationOtp_Call {
	_c.Call.Return(run)
	return _c
}

// NewOtpCache creates a new instance of OtpCache. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOtpCache(t interface {
	mock.TestingT
	Cleanup(func())
}) *OtpCache {
	mock := &OtpCache{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
